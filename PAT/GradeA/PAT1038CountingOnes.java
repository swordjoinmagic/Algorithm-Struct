package PAT.GradeA;

/**
 * 题意:
 *      1. 给定一个正整数N,求 1..N中,有多少个1,
 *      举例,1-12有5个1,分别是 1,10,11,12
 *
 * 思路:
 *      1. N的单位有10亿,即使是最快的O(LogN)应该也过不了,
 *      需要用数学方法,即O(1)的方法解决
 *      2. 经过观察发现,
 *
 *          a. 设1位数x,则有1个1
 *          b. 如果N>=20,那么N至少有11个1(其中11有两个1)
 *          c. 如果N>=120,那么N至少有102个1(其中111有三个1)
 *          d. 如果N>=1200,那么N至少有1003个1(其中1111有四个1)
 *
 *      3. 应该是要从后往前(即个位到十位到百位)计算,
 *          设nums[x]表示第x位数贡献的1的个数
 *          a.对于个位数x而言,只要x>=1,那么nums[0]+=1
 *          b.对于十位数y而言
 *              1) y>=2的情况,nums[1]+=10+nums[0](11有两个1)
 *              2) y<=1的情况
 *                  ○ x>=1的情况,total += x+2 (11有两个1)
 *                  ○ x <1的情况,total += x+1
 *          c.对于百位数z而言
 *              1)z>=2的情况,total+=100+2(111有3个1)
 *
 */

public class PAT1038CountingOnes {
}
